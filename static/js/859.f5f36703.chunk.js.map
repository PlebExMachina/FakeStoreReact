{"version":3,"file":"static/js/859.f5f36703.chunk.js","mappings":"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","sources":["webpack://fake-store-react/./src/components/wrappers/CardWrapper.module.css?e0be","components/wrappers/CardWrapper.js","components/ProductBody.module.css","components/ProductBody.js","webpack://fake-store-react/./src/components/ProductCard.module.css?5046","components/ProductCard.js","webpack://fake-store-react/./src/components/ProductsList.module.css?26f3","components/ProductsList.js","components/ui/ProductsInterface.js","webpack://fake-store-react/./src/pages/Products.module.css?1d52","pages/Products.js","utils/FakeStoreAPI.js","components/ui/ProductDetailsInterface.module.css"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"module\":\"CardWrapper_module__z3uWm\",\"body\":\"CardWrapper_body__11L9G\",\"alt\":\"CardWrapper_alt__w4Yjm\"};","/*\r\n  Wrapper for a Bootstrap Card with provided image properties and children elements for the body.\r\n*/\r\n\r\n// Bootstrap\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n// CSS\r\nimport styles from './CardWrapper.module.css';\r\n\r\nfunction CardWrapper({children, image, onDoubleClick, config}) {\r\n  const useConfig = config || false;\r\n  // Injected double click event\r\n  onDoubleClick = onDoubleClick || (() => {});\r\n\r\n    return (\r\n            <Card className={`${styles.module} ${styles.body} text-center col-xs-4 d-flex justify-content-between m-1 p-1 bg-dark p-5 ${useConfig ? styles.alt : ''}`} onDoubleClick={onDoubleClick}>\r\n                <Card.Img variant=\"top\" src={image} className=\"border\" />\r\n                <Card.Body className=\"d-flex flex-column justify-content-end text-light\">\r\n                  {children}\r\n                </Card.Body>\r\n            </Card>\r\n    );\r\n}\r\nexport default CardWrapper;","// extracted by mini-css-extract-plugin\nexport default {\"module\":\"ProductBody_module__a40Wa\",\"body\":\"ProductBody_body__aAjDe\"};","// Bootstrap\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n// CSS\r\nimport styles from './ProductBody.module.css';\r\n\r\nfunction ProductBody({title, price, description}) {\r\n    return (\r\n        <div className={`${styles.module} ${styles.body}`}>\r\n            {title && <Card.Title>{title}</Card.Title>}\r\n            {price && <Card.Text>${price.toFixed(2)}</Card.Text>}\r\n            {description && <Card.Text>{description}</Card.Text>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductBody;","// extracted by mini-css-extract-plugin\nexport default {\"product\":\"ProductCard_product__-DuIO\",\"card\":\"ProductCard_card__xDifG\"};","/*\r\n    Specialization of the card that contains product information.\r\n*/\r\n\r\n// React\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// Bootstrap\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n// Sub Components\r\nimport CardWrapper from './wrappers/CardWrapper';\r\nimport ProductBody from './ProductBody';\r\n\r\n// CSS\r\nimport styles from './ProductCard.module.css';\r\n\r\nfunction ProductCard(props) {\r\n    const navigate = useNavigate();\r\n    const toDetails = () => {\r\n        navigate(`./products/${props.id}`);\r\n    };\r\n\r\n    const localDoubleClick = props.onDoubleClick || toDetails;\r\n\r\n    return (\r\n        <CardWrapper image={props.image} onDoubleClick={localDoubleClick} config={props.config} className={`${styles.module} ${styles.body}`}>\r\n            <ProductBody {...props}/>\r\n            {props.children}\r\n            {props.clickButton && <Button onClick={toDetails}>Details</Button>}\r\n        </CardWrapper>\r\n    );\r\n}\r\nexport default ProductCard;","// extracted by mini-css-extract-plugin\nexport default {\"module\":\"ProductsList_module__t5Aot\",\"body\":\"ProductsList_body__cq8yN\",\"products\":\"ProductsList_products__606VQ\",\"horizontalScrollable\":\"ProductsList_horizontalScrollable__9j0jc\",\"force\":\"ProductsList_force__4vFWP\",\"scrolling\":\"ProductsList_scrolling__7itfM\",\"testimonial-group\":\"ProductsList_testimonial-group__bEIe0\"};","// React\r\nimport { useRef } from 'react';\r\n\r\n// Utils\r\nimport { useDraggable } from 'react-use-draggable-scroll';\r\n\r\n// Sub Components\r\nimport ProductCard from './ProductCard';\r\n\r\n// CSS\r\nimport styles from './ProductsList.module.css'\r\n\r\nfunction ProductsList({view}){\r\n    // Draggable\r\n    const dragPoint = useRef(); \r\n    const { events } = useDraggable(dragPoint);\r\n\r\n    return (\r\n        <div className={`container ${styles.horizontalScrollable} ${styles.products}`}>\r\n            <div className={`row text-center ${styles.force} ${styles.scrolling}`} {...events} ref={dragPoint}>\r\n                {view && view.map(el => <ProductCard key={el.id} {...el} description={null} clickButton={true} />)}\r\n            </div>\r\n        </div>  \r\n    );\r\n}\r\n\r\nexport default ProductsList;","// Utils\r\nimport { getCategories, getProducts, getProductsByCategory } from '../../utils/FakeStoreAPI';\r\n\r\n// React\r\nimport { useState, useEffect, useRef, useCallback } from 'react';\r\n\r\n// Bootstrap\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\n// CSS\r\nimport styles from './ProductDetailsInterface.module.css'\r\n\r\nfunction ProductsInterface({view, setView}) {\r\n    const [term, setTerm] = useState(\"\");           // Term must be included in either title or description.\r\n    const [category, setCategory] = useState(\"\");   // Category to filter the query by. Changing this will trigger a re-fetch.\r\n    const [sortBy, setSortBy] = useState(\"\");       // \"\" -> None, LT -> Lowest to Highest, GT -> Highest to Lowest. Changing this will change results without fetching.\r\n    const [results, setResults] = useState([]);      // Literal results of the fetch.\r\n\r\n    // Options available to filter by.\r\n    const [categoryOptions, setCategoryOptions] = useState([\"None\"]);\r\n\r\n    // On initialization only fetch categories from API\r\n    useEffect(() => {\r\n        getCategories().then((obj) => {\r\n            setCategoryOptions([\"None\",...obj]);\r\n        });\r\n    }, []);\r\n\r\n    // Bind directly to the search bar value.\r\n    const formSearch = useRef(null);\r\n\r\n    // Update search term.\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setTerm(formSearch.current.value);\r\n    };\r\n\r\n    // Update the view (filter / sort)\r\n    const UpdateProductsView = useCallback (() => {\r\n        const Temp = results.filter(el => el.title.toLowerCase().includes(term.toLowerCase()) || el.description.toLowerCase().includes(term.toLowerCase()));\r\n        switch(sortBy){\r\n            case \"\": \r\n            setView(Temp);\r\n            break;\r\n            case \"LT\": \r\n            setView(Temp.sort((a, b) => a.price - b.price));\r\n            break;\r\n            case \"GT\": \r\n            setView(Temp.sort((a, b) => b.price - a.price));\r\n            break;\r\n            default:\r\n            console.log(\"Unexpected Sorting Parameter\")\r\n        };\r\n        }, [results, sortBy, term, setView]);\r\n    \r\n        // Get products then update results.\r\n        const FetchProducts = useCallback(() => {\r\n        (() => {\r\n            switch(category){\r\n            case \"\":\r\n                return getProducts();\r\n            case \"None\":\r\n                return getProducts();\r\n            default:\r\n                return getProductsByCategory(category);\r\n            }\r\n        })().then(obj => {\r\n            setResults(obj);\r\n        });\r\n        }, [category]);\r\n        \r\n    \r\n    \r\n        // When category changes re-fetch.\r\n        useEffect(() => { FetchProducts() }, [FetchProducts, category]);\r\n    \r\n        // When other query parameters then re-filter / sort data.\r\n        useEffect(() => { UpdateProductsView() }, [UpdateProductsView, term, sortBy]);\r\n\r\n    return (\r\n        <div className={`${styles.module} ${styles.body}`}>\r\n        <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n        <Container className=\"d-flex justify-content-center\">\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"m-auto\">\r\n            <Form className=\"m-auto p-3\" onSubmit={(e)=>{ handleSubmit(e); }}>\r\n                <Button variant=\"primary\" className=\"w-100\" type=\"submit\">Search</Button>\r\n                <Form.Control type=\"text\" className=\"w-100\" ref={formSearch} placeholder=\"...\" />\r\n            </Form>\r\n            <Dropdown className=\"m-auto p-3\">\r\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">Category</Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    {categoryOptions.map((el, index) => <Dropdown.Item key={index} onClick={()=>{setCategory(el)}}>{el}\r\n                    </Dropdown.Item>)}        \r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n            <Dropdown className=\"m-auto p-3\">\r\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">Sort By</Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item onClick={()=>{ setSortBy(\"\"); }}>Nothing</Dropdown.Item>\r\n                    <Dropdown.Item onClick={()=>{ setSortBy(\"LT\"); }}>Least Expensive</Dropdown.Item>\r\n                    <Dropdown.Item onClick={()=>{ setSortBy(\"GT\"); }}>Most Expensive</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n        </Container>\r\n    </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductsInterface;","// extracted by mini-css-extract-plugin\nexport default {\"module\":\"Products_module__KWmt7\",\"body\":\"Products_body__9khjo\",\"products\":\"Products_products__3msWA\",\"horizontalScrollable\":\"Products_horizontalScrollable__ZVmK-\",\"testimonial-group\":\"Products_testimonial-group__Knno6\"};","/*\r\n    The products page contains a list of fetched products which can be filtered / sorted in several ways.\r\n*/\r\n\r\n// React\r\nimport { useState } from 'react'\r\nimport { Outlet } from 'react-router-dom';\r\n\r\n// Sub Components\r\nimport ProductsList from '../components/ProductsList';\r\nimport ProductsInterface from '../components/ui/ProductsInterface';\r\n\r\n// CSS\r\nimport styles from './Products.module.css';\r\n\r\nfunction Products() {\r\n    const [view, setView] = useState([]);           // Results after filtering / sorting.\r\n\r\n    return (\r\n       view && <div className={`${styles.module} ${styles.body}`}>\r\n            <ProductsInterface view={view} setView={setView}/>\r\n            <ProductsList view={view}/>\r\n            <Outlet/>\r\n        </div>\r\n    );\r\n}\r\nexport default Products;","/* \r\n    Implements the FakeStoreAPI\r\n\r\n    This is naive and assumes that nothing will go wrong with the fetch. \r\n\r\n    https://fakestoreapi.com/ \r\n*/\r\n\r\n// Get all products\r\n/*\r\n    [\r\n        {\r\n            id:1,\r\n            title:'...',\r\n            price:'...',\r\n            category:'...',\r\n            description:'...',\r\n            image:'...'\r\n        },\r\n        ...\r\n    ]\r\n*/\r\nexport const getProducts = () =>  fetch('https://fakestoreapi.com/products').then(res => res.json());\r\n\r\n// Get a single product\r\n/*\r\n    {\r\n        id:1,\r\n        title:'...',\r\n        price:'...',\r\n        category:'...',\r\n        description:'...',\r\n        image:'...'\r\n    },\r\n*/\r\nexport const getProductByID = (id) => fetch(`https://fakestoreapi.com/products/${id}`).then(res => res.json());\r\n\r\n// Retrieves available categories.\r\n/*\r\n    [\"electronics\",\"jewelery\",\"men's clothing\",\"women's clothing\"]\r\n*/\r\nexport const getCategories = () => fetch(`https://fakestoreapi.com/products/categories`).then(res => res.json());\r\n\r\n// Get products in a specific category\r\n/*\r\n    [\r\n        {\r\n            id:1,\r\n            title:'...',\r\n            price:'...',\r\n            category:'<category>',\r\n            description:'...',\r\n            image:'...'\r\n        },\r\n        ...\r\n    ]\r\n*/\r\nexport const getProductsByCategory = (category) => fetch(`https://fakestoreapi.com/products/category/${category}`).then(res => res.json());\r\n\r\n// Filters a list of data by a search term. Checks both title and description.\r\nexport const filterByTerm = (arr, term) => arr.filter((el) => el.title.includes(term) || el.description.includes(term));","// extracted by mini-css-extract-plugin\nexport default {\"module\":\"ProductDetailsInterface_module__wqEz+\",\"body\":\"ProductDetailsInterface_body__F6t-5\"};"],"names":["children","image","onDoubleClick","useConfig","config","Card","className","styles","variant","src","title","price","description","toFixed","props","navigate","useNavigate","toDetails","id","localDoubleClick","clickButton","Button","onClick","view","dragPoint","useRef","events","useDraggable","ref","map","el","ProductCard","setView","useState","term","setTerm","category","setCategory","sortBy","setSortBy","results","setResults","categoryOptions","setCategoryOptions","useEffect","getCategories","then","obj","formSearch","UpdateProductsView","useCallback","Temp","filter","toLowerCase","includes","sort","a","b","console","log","FetchProducts","getProducts","getProductsByCategory","Navbar","bg","expand","Container","Nav","Form","onSubmit","e","preventDefault","current","value","handleSubmit","type","placeholder","Dropdown","index","fetch","res","json","getProductByID"],"sourceRoot":""}